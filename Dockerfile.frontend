FROM node:18-alpine as build

# Establecer directorio de trabajo
WORKDIR /app

# Copiar archivos de configuración
COPY frontend/music-admin/package.json frontend/music-admin/pnpm-lock.yaml ./

# Instalar pnpm globalmente
RUN npm install -g pnpm

# Instalar dependencias
RUN pnpm install

# Copiar el código fuente
COPY frontend/music-admin/ .

# Construir la aplicación para producción
RUN pnpm build

# Etapa de producción
FROM nginx:stable-alpine as production

# Copiar la configuración de nginx
COPY docker/nginx.conf /etc/nginx/conf.d/default.conf

# Copiar los archivos construidos desde la etapa de construcción
COPY --from=build /app/dist /usr/share/nginx/html

# Exponer puerto 80
EXPOSE 80

# Comando para iniciar nginx en primer plano
CMD ["nginx", "-g", "daemon off;"]
